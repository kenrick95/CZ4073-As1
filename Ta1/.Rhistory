irs
iris
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
View(fd)
df
fd
?apply
apply(df, 1, sum)
apply(df, 2, sum)
apply(df, 3, sum)
df[1]
apply(df, 2, sort)
?sapply
?dapply
sappply(df, sum)
sapply(df, sum)
vapply(df, sum)
vapply(df, sum, 5)
apply(df, 2, sum)
apply(df, 2, max)
apply(df, 2, max, na.rm=TRUE)
df
df
df
fd
apply(fd, 2, max, na.rm=TRUE)
apply(fd, 2, max)
apply(fd, 2, sum)
apply(fd, 2, sum)
?map
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
for (row in ret) {
print(row)
}
return(ret)
}
ad <- removeHalfX(fd)
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
for (row in ret) {
print(row[1])
print(row[2])
}
return(ret)
}
ad <- removeHalfX(fd)
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
for (row in ret) {
print(row[1])
}
return(ret)
}
ad <- removeHalfX(fd)
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
print(ret)
for (row in ret) {
print(row[1])
}
return(ret)
}
ad <- removeHalfX(fd)
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$x < med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
View(ad)
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
View(ad)
?lm
lm(y ~ x, data=ad)
model1 <- lm(y ~ x, data=ad)
fitad <- fd
fitad <- predict(model1, fd)
fitad <- fd
fitad$x <- predict(model1, ad)
View(fitad)
fitad <- ad
predict(model1, ad)
model1 <- lm(x ~ y, data=ad)
model1
predict(model1, ad)
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
View(fitad)
View(ad)
model1 <- lm(x ~ y, data=ad, na.action = na.exclude)
model1
lm(x ~ y, data=ad, na.action = na.omit)
lm(x ~ y, data=ad, na.action = na.fail)
lm(x ~ y, data=ad, na.action = na.pass)
# I'm using iris dataset
# let x be sepal.length; and y be petal.length
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
plot(fd$x, fd$y)
plot(fd$x, fd$y, mfrow=c(2,2), pch=16)
plot(mfrow=c(2,2), pch=16)
par(mfrow=c(2,2), pch=16)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
par(mfrow=c(1,2), pch=16)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(ad$x, ad$y)
plot(fitad$x, fitad$y)
par(mfrow=c(1,2))
plot(fd$x, fd$y)
plot(fitfd$x, fitfd$y)
plot(fd$x, fd$y, col="red")
plot(fd, col="red")
plot(fitfd$x, fitfd$y)
plot(fd, col="red")
plot(fd, fitfd, col="red")
plot(fd, col="red")
plot(fd, col="red")
)
points(fitfd)
ol="red")
points(fitad)
plot(ad, col="red")
points(fitad)
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
par(mfrow=c(1,2))
plot(fd, col="red")
points(fitfd)
plot(ad, col="red")
points(fitad)
par(mfrow=c(1,2))
plot(fd, col="red")
points(fitfd)
mtext("Full data", side=3, outer=TRUE, line=-3)
plot(ad, col="red")
points(fitad)
mtext("Available data", side=3, outer=TRUE, line=-3)
par(mfrow=c(1,2))
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
par(mfrow=c(1,2), pch=11)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
pch=12)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
par(mfrow=c(1,2), pch=12)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
par(mfrow=c(1,2), pch = 16)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
test  <- read.csv("test.csv")
train  <- read.csv("train.csv")
uniformPredictions  <- rep(mean(train$Rating), nrow(test))
library(plyr)
userMeans  <- ddply(train, "User", function(df) mean(df$Rating))
test$id  <- 1:nrow(test)
testWithUserMeans  <- merge(test, userMeans, all.x = T)
testWithUserMeans = testWithUserMeans[order(testWithUserMeans$id),]
testWithUserMeans[is.na(testWithUserMeans$V1),]  <- uniformPredictions[1]
summary(testWithUserMeans)
artistMeans  <- ddply(train, "Artist", function(df) mean(df$Rating))
testWithArtistMeans  <- merge(test, artistMeans, all.x = T)
testWithArtistMeans = testWithArtistMeans[order(testWithArtistMeans$id),]
testWithArtistMeans[is.na(testWithArtistMeans$V1),]  <- uniformPredictions[1]
summary(testWithUserMeans)
write.csv(testWithUserMeans$V1, file = "userMeans.csv", row.names = F)
write.csv(testWithArtistMeans$V1, file = "ArtistMeans.csv", row.names = F)
write.csv(uniformPredictions, file = "uniform.csv", row.names = F)
# I'm using iris dataset
# let x be sepal.length; and y be petal.length
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, fd)
c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
# I'm using iris dataset
# let x be sepal.length; and y be petal.length
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, fd)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
# I'm using iris dataset
# let x be sepal.length; and y be petal.length
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
# I'm using iris dataset
# let x be sepal.length; and y be petal.length
fd <- data.frame(x = iris$Sepal.Length, y = iris$Petal.Length)
# Task 1a
removeHalfX <- function(fdp) {
ret = fdp
med = median(fdp$y)
ret$x[ret$y > med] <- NA
return(ret)
}
ad <- removeHalfX(fd)
# Task 1b
model1 <- lm(x ~ y, data=ad)
fitad <- ad
fitad$x <- predict(model1, ad)
# Task 1c
model2 <- lm(x ~ y, data=fd)
fitfd <- fd
fitfd$x <- predict(model1, fd)
# Task 1d
par(mfrow=c(1,2), pch = 16, cex = 0.75)
plot(fd, col="red", main = "Full data")
points(fitfd)
plot(ad, col="red", main = "Available data")
points(fitad)
